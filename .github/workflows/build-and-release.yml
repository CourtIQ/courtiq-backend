name: Build and Publish

on:
  push:
    tags:
      - '*'
jobs:
  permissions:
    contents: 'read'
    id-token: 'write'

  build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set Environment Variables and tags
        run: |
          TAG="latest"          
          REPOSITORY=$(echo '${{ github.repository }}' |awk -F '/' '{gsub(/-/, "_", $0) ;print $NF}')          
          VERSION="0.0.0ci"
          BRANCH=${{ github.head_ref || github.ref_name }}
          DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=$(echo ${{github.ref}} |  cut -d / -f 3)
            VERSION=$TAG
            BRANCH=$TAG
          fi
          echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: 'Google auth'
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
          project_id: 'courtiq-auth'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: '${{ env.PROJECT_ID }}'

      - name: 'Docker auth'
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: 'Build and push container'
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" ./app
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"