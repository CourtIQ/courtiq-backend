name: Build and Publish

on:
  push:
    tags:
      - 'v*'

env:
  GCR_IMAGE_LOCATION: us-central1
  REGION: us-central1
  GCP_PROJECT_ID: courtiq-backend

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_env.outputs.tag }}
    steps:
      - name: Set Environment Variables and Tags
        id: set_env
        run: |
          TAG="latest"          
          BRANCH=${{ github.head_ref || github.ref_name }}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=$(echo ${{github.ref}} |  cut -d / -f 3)
            BRANCH=$TAG
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "TAG=$TAG"

  api_gateway:
    needs: setup_environment
    env:
      SVC_NAME: api-gateway
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.SVC_NAME }}
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml

  equipment_service:
    needs: setup_environment
    env:
      SVC_NAME: equipment-service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml

  matchup_service:
    needs: setup_environment
    env:
      SVC_NAME: matchup-service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml

  relationship_service:
    needs: setup_environment
    env:
      SVC_NAME: relationship-service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml

  user_service:
    needs: setup_environment
    env:
      SVC_NAME: user-service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml

  search_service:
    needs: setup_environment
    env:
      SVC_NAME: search-service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load 1Password Secrets
        uses: 1Password/load-secrets-action@v2.0.0
        with:
          export-env: true
          item: "Court IQ Production"
          secrets: |
            MONGODB_URL
            FIREBASE_CONFIG
            FIREBASE_SERVICE_ACCOUNT
            GOOGLE_PLACES_API_KEY

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.SVC_NAME }}/Dockerfile
          push: true
          tags: ${{ env.GCR_IMAGE_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SVC_NAME }}/${{ env.SVC_NAME }}:${{ needs.setup_environment.outputs.tag }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy to Cloud Run
        run: |
          cd ${{ env.SVC_NAME }}
          sed -i "s/IMAGE_TAG/${{ needs.setup_environment.outputs.tag }}/g" service.yaml
          gcloud run services replace service.yaml