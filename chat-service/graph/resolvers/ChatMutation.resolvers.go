package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/chat-service/graph"
	"github.com/CourtIQ/courtiq-backend/chat-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// CreatePrivateChat is the resolver for the createPrivateChat field.
func (r *mutationResolver) CreatePrivateChat(ctx context.Context, userID primitive.ObjectID) (*model.PrivateChat, error) {
	return r.ChatService.CreatePrivateChat(ctx, userID)
}

// CreateGroupChat is the resolver for the createGroupChat field.
func (r *mutationResolver) CreateGroupChat(ctx context.Context, name string, image *string, members []primitive.ObjectID) (*model.GroupChat, error) {
	return r.ChatService.CreateGroupChat(ctx, name, members)
}

// UpdateGroupChat is the resolver for the updateGroupChat field.
func (r *mutationResolver) UpdateGroupChat(ctx context.Context, id primitive.ObjectID, name *string, image *string) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: UpdateGroupChat - updateGroupChat"))
}

// DeleteGroupChat is the resolver for the deleteGroupChat field.
func (r *mutationResolver) DeleteGroupChat(ctx context.Context, id primitive.ObjectID) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: DeleteGroupChat - deleteGroupChat"))
}

// DeletePrivateChat is the resolver for the deletePrivateChat field.
func (r *mutationResolver) DeletePrivateChat(ctx context.Context, id primitive.ObjectID) (*model.PrivateChat, error) {
	panic(fmt.Errorf("not implemented: DeletePrivateChat - deletePrivateChat"))
}

// AddMembersToGroupChat is the resolver for the addMembersToGroupChat field.
func (r *mutationResolver) AddMembersToGroupChat(ctx context.Context, id primitive.ObjectID, members []primitive.ObjectID) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: AddMembersToGroupChat - addMembersToGroupChat"))
}

// RemoveMembersFromGroupChat is the resolver for the removeMembersFromGroupChat field.
func (r *mutationResolver) RemoveMembersFromGroupChat(ctx context.Context, id primitive.ObjectID, members []primitive.ObjectID) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: RemoveMembersFromGroupChat - removeMembersFromGroupChat"))
}

// LeaveGroupChat is the resolver for the leaveGroupChat field.
func (r *mutationResolver) LeaveGroupChat(ctx context.Context, id primitive.ObjectID) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: LeaveGroupChat - leaveGroupChat"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
