package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/chat-service/graph"
	"github.com/CourtIQ/courtiq-backend/chat-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// Chats is the resolver for the chats field.
func (r *queryResolver) Chats(ctx context.Context, limit *int, offset *int) ([]model.Chat, error) {
	return r.ChatService.GetUserChats(ctx, limit, offset)
}

// MyPrivateChat is the resolver for the myPrivateChat field.
func (r *queryResolver) MyPrivateChat(ctx context.Context, id primitive.ObjectID) (*model.PrivateChat, error) {
	panic(fmt.Errorf("not implemented: MyPrivateChat - myPrivateChat"))
}

// MyGroupChat is the resolver for the myGroupChat field.
func (r *queryResolver) MyGroupChat(ctx context.Context, id primitive.ObjectID) (*model.GroupChat, error) {
	panic(fmt.Errorf("not implemented: MyGroupChat - myGroupChat"))
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
