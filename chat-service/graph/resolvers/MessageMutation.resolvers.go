package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/chat-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// SendTextMessage is the resolver for the sendTextMessage field.
func (r *mutationResolver) SendTextMessage(ctx context.Context, chatID primitive.ObjectID, text string) (model.Message, error) {
	return r.ChatService.SendTextMessage(ctx, chatID, text)
}

// SendImageMessage is the resolver for the sendImageMessage field.
func (r *mutationResolver) SendImageMessage(ctx context.Context, chatID primitive.ObjectID, url string) (model.Message, error) {
	panic(fmt.Errorf("not implemented: SendImageMessage - sendImageMessage"))
}

// UpdateTextMessage is the resolver for the updateTextMessage field.
func (r *mutationResolver) UpdateTextMessage(ctx context.Context, id primitive.ObjectID, text string) (model.Message, error) {
	panic(fmt.Errorf("not implemented: UpdateTextMessage - updateTextMessage"))
}

// DeleteMessage is the resolver for the deleteMessage field.
func (r *mutationResolver) DeleteMessage(ctx context.Context, id primitive.ObjectID) (model.Message, error) {
	panic(fmt.Errorf("not implemented: DeleteMessage - deleteMessage"))
}
