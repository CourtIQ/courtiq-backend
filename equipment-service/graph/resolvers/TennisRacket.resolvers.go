package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"

	"github.com/CourtIQ/courtiq-backend/equipment-service/graph"
	"github.com/CourtIQ/courtiq-backend/equipment-service/graph/model"
)

// MyTennisRackets is the resolver for the myTennisRackets field.
func (r *userResolver) MyTennisRackets(ctx context.Context, obj *model.User, limit *int, offset *int, federationRequires map[string]any) ([]*model.TennisRacket, error) {
	return r.EquipmentServiceIntf.MyTennisRackets(ctx, limit, offset)
}

// MyTennisStrings is the resolver for the myTennisStrings field.
func (r *userResolver) MyTennisStrings(ctx context.Context, obj *model.User, limit *int, offset *int, federationRequires map[string]any) ([]*model.TennisString, error) {
	return r.EquipmentServiceIntf.MyTennisStrings(ctx, limit, offset)
}

// User returns graph.UserResolver implementation.
func (r *Resolver) User() graph.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
