package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"

	"github.com/CourtIQ/courtiq-backend/equipment-service/graph"
	"github.com/CourtIQ/courtiq-backend/equipment-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// FindEquipmentByID is the resolver for the findEquipmentByID field.
func (r *entityResolver) FindEquipmentByID(ctx context.Context, id primitive.ObjectID) (model.Equipment, error) {
	return r.EquipmentServiceIntf.FindEquipmentByID(ctx, id)
}

// FindTennisRacketByID is the resolver for the findTennisRacketByID field.
func (r *entityResolver) FindTennisRacketByID(ctx context.Context, id primitive.ObjectID) (*model.TennisRacket, error) {
	return r.EquipmentServiceIntf.FindTennisRacketByID(ctx, id)
}

// FindTennisStringByID is the resolver for the findTennisStringByID field.
func (r *entityResolver) FindTennisStringByID(ctx context.Context, id primitive.ObjectID) (*model.TennisString, error) {
	return r.EquipmentServiceIntf.FindTennisStringByID(ctx, id)
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id primitive.ObjectID) (*model.User, error) {
	return &model.User{
		ID: id,
	}, nil
}

// Entity returns graph.EntityResolver implementation.
func (r *Resolver) Entity() graph.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
