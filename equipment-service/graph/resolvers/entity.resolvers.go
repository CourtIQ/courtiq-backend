package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/equipment-service/graph"
	"github.com/CourtIQ/courtiq-backend/equipment-service/graph/model"
)

// FindEquipmentByID is the resolver for the findEquipmentByID field.
func (r *entityResolver) FindEquipmentByID(ctx context.Context, id string) (model.Equipment, error) {
	panic(fmt.Errorf("not implemented: FindEquipmentByID - findEquipmentByID"))
}

// FindTennisRacketByID is the resolver for the findTennisRacketByID field.
func (r *entityResolver) FindTennisRacketByID(ctx context.Context, id string) (*model.TennisRacket, error) {
	panic(fmt.Errorf("not implemented: FindTennisRacketByID - findTennisRacketByID"))
}

// FindTennisStringByID is the resolver for the findTennisStringByID field.
func (r *entityResolver) FindTennisStringByID(ctx context.Context, id string) (*model.TennisString, error) {
	panic(fmt.Errorf("not implemented: FindTennisStringByID - findTennisStringByID"))
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: FindUserByID - findUserByID"))
}

// Entity returns graph.EntityResolver implementation.
func (r *Resolver) Entity() graph.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
