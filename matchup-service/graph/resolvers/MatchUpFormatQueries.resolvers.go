package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/matchup-service/graph"
	"github.com/CourtIQ/courtiq-backend/matchup-service/graph/schema/scalars"
)

// TestNumberOfSets is the resolver for the testNumberOfSets field.
func (r *queryResolver) TestNumberOfSets(ctx context.Context, sets *scalars.NumberOfSets) (scalars.NumberOfSets, error) {
	return *sets, nil
}

// TestNumberOfGames is the resolver for the testNumberOfGames field.
func (r *queryResolver) TestNumberOfGames(ctx context.Context, games *scalars.NumberOfGames) (scalars.NumberOfGames, error) {
	return *games, nil
}

// TestTiebreakPoints is the resolver for the testTiebreakPoints field.
func (r *queryResolver) TestTiebreakPoints(ctx context.Context, games *string) (string, error) {
	panic(fmt.Errorf("not implemented: TestTiebreakPoints - testTiebreakPoints"))
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
