package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/matchup-service/graph"
	"github.com/CourtIQ/courtiq-backend/matchup-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// CreateMatchUp is the resolver for the createMatchUp field.
func (r *mutationResolver) CreateMatchUp(ctx context.Context, matchUpFormatInput model.MatchUpFormatInput, matchUpType model.MatchUpType, participantsMapInput model.ParticipantsMapInput) (*model.MatchUp, error) {
	return r.MatchUpServiceIntf.CreateMatchUp(ctx, matchUpFormatInput, matchUpType, participantsMapInput)
}

// UpdateMatchUpStatus is the resolver for the updateMatchUpStatus field.
func (r *mutationResolver) UpdateMatchUpStatus(ctx context.Context, status model.MatchUpStatus, matchUpID primitive.ObjectID) (*model.MatchUp, error) {
	return r.MatchUpServiceIntf.UpdateMatchUpStatus(ctx, status, matchUpID)
}

// AddPointToMatchUp is the resolver for the addPointToMatchUp field.
func (r *mutationResolver) AddPointToMatchUp(ctx context.Context, pointInput model.PointInput, matchUpID primitive.ObjectID) (*model.MatchUp, error) {
	return r.MatchUpServiceIntf.AddPointToMatchUp(ctx, pointInput, matchUpID)
}

// AddShotToMatchUp is the resolver for the addShotToMatchUp field.
func (r *mutationResolver) AddShotToMatchUp(ctx context.Context, matchUpID primitive.ObjectID, shotInput model.ShotInput) (*model.MatchUp, error) {
	panic(fmt.Errorf("not implemented: AddShotToMatchUp - addShotToMatchUp"))
}

// UndoLastShotFromMatchUp is the resolver for the undoLastShotFromMatchUp field.
func (r *mutationResolver) UndoLastShotFromMatchUp(ctx context.Context, matchUpID primitive.ObjectID) (*model.MatchUp, error) {
	panic(fmt.Errorf("not implemented: UndoLastShotFromMatchUp - undoLastShotFromMatchUp"))
}

// UndoLastPointFromMatchUp is the resolver for the undoLastPointFromMatchUp field.
func (r *mutationResolver) UndoLastPointFromMatchUp(ctx context.Context, matchUpID primitive.ObjectID) (*model.MatchUp, error) {
	return r.MatchUpServiceIntf.UndoLastPointFromMatchUp(ctx, matchUpID)
}

// DeleteMatchUp is the resolver for the deleteMatchUp field.
func (r *mutationResolver) DeleteMatchUp(ctx context.Context, matchUpID primitive.ObjectID) (*model.MatchUp, error) {
	return r.MatchUpServiceIntf.DeleteMatchUp(ctx, matchUpID)
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
