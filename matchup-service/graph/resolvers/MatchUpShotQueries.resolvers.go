package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/matchup-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// GetLastShot is the resolver for the getLastShot field.
func (r *queryResolver) GetLastShot(ctx context.Context, matchUpID primitive.ObjectID) (*model.MatchUpShot, error) {
	panic(fmt.Errorf("not implemented: GetLastShot - getLastShot"))
}

// GetMatchShots is the resolver for the getMatchShots field.
func (r *queryResolver) GetMatchShots(ctx context.Context, matchUpID primitive.ObjectID) ([]*model.MatchUpShot, error) {
	panic(fmt.Errorf("not implemented: GetMatchShots - getMatchShots"))
}

// GetShotByID is the resolver for the getShotById field.
func (r *queryResolver) GetShotByID(ctx context.Context, shotID primitive.ObjectID) (*model.MatchUpShot, error) {
	panic(fmt.Errorf("not implemented: GetShotByID - getShotById"))
}

// GetGameShots is the resolver for the getGameShots field.
func (r *queryResolver) GetGameShots(ctx context.Context, matchUpID primitive.ObjectID, setNumber int, gameNumber int) ([]*model.MatchUpShot, error) {
	panic(fmt.Errorf("not implemented: GetGameShots - getGameShots"))
}
