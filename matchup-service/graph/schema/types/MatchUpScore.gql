"""
The main container for all real-time or final scoring data.
- An array of completed/in-progress sets
- The current in-game point score (if not in tiebreak)
- A flag for whether the match is finished
"""
type MatchUpScore {
  """
  A list of set-by-set scoring details.
  Each SetScore holds how many games each side has,
  and whether a tiebreak is in progress.
  """
  sets: [SetScore!]!

  """
  The partial "point level" for the current (not-yet-finished) game,
  if the match is not in a tiebreak. Each entry references a side
  (TEAM_A or TEAM_B) and an InGamePoint.
  """
  currentGame: [SideGameScore!]!

  """
  Indicates if the match is fully decided (someone reached 
  the required sets).
  """
  isMatchComplete: Boolean!
}

"""
Each set in a tennis match. If 'isCompleted' is true, 
one side has won this set (e.g., 6-4), possibly via tiebreak.
"""
type SetScore {
  """
  Which set number (e.g., 0-based or 1-based).
  """
  setIndex: Int!

  """
  Scores for the two sides: how many games they've won,
  and any tiebreak points if relevant.
  """
  sides: [SideSetScore!]!

  """
  True if this set has been fully won by one side.
  """
  isCompleted: Boolean!

  """
  True if a tiebreak is currently active (i.e., partial tiebreak),
  or false if no tiebreak is in progress or it already finished.
  """
  isTiebreakActive: Boolean!
}

"""
Holds the game-level data for each side of a set:
- gamesWon
- tiebreakPoints (if a tiebreak is ongoing or completed)
"""
type SideSetScore {
  side: TeamSide!
  gamesWon: Int!
  tiebreakPoints: Int
}

"""
Represents the in-progress point score for an ongoing game.
If the match is in a tiebreak (isTiebreakActive=true), 
you might ignore 'currentGame' and track 'tiebreakPoints' instead.
"""
type SideGameScore {
  side: TeamSide!
  inGamePoint: InGameScore!
}