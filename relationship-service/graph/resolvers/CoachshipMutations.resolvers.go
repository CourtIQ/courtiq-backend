package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/relationship-service/graph"
)

// RequestToBeStudent is the resolver for the requestToBeStudent field.
func (r *mutationResolver) RequestToBeStudent(ctx context.Context, ofUserID string) (*bool, error) {
	return r.RelationshipService.RequestToBeStudent(ctx, ofUserID)
}

// AcceptStudentRequest is the resolver for the acceptStudentRequest field.
func (r *mutationResolver) AcceptStudentRequest(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.AcceptStudentRequest(ctx, coachshipID)
}

// RejectStudentRequest is the resolver for the rejectStudentRequest field.
func (r *mutationResolver) RejectStudentRequest(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.RejectStudentRequest(ctx, coachshipID)
}

// CancelRequestToBeStudent is the resolver for the cancelRequestToBeStudent field.
func (r *mutationResolver) CancelRequestToBeStudent(ctx context.Context, coachshipID string) (*bool, error) {
	panic(fmt.Errorf("not implemented: CancelRequestToBeStudent - cancelRequestToBeStudent"))
}

// RemoveStudent is the resolver for the removeStudent field.
func (r *mutationResolver) RemoveStudent(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.RemoveStudent(ctx, coachshipID)
}

// RequestToBeCoach is the resolver for the requestToBeCoach field.
func (r *mutationResolver) RequestToBeCoach(ctx context.Context, ofUserID string) (*bool, error) {
	return r.RelationshipService.RequestToBeCoach(ctx, ofUserID)
}

// AcceptCoachRequest is the resolver for the acceptCoachRequest field.
func (r *mutationResolver) AcceptCoachRequest(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.AcceptCoachRequest(ctx, coachshipID)
}

// RejectCoachRequest is the resolver for the rejectCoachRequest field.
func (r *mutationResolver) RejectCoachRequest(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.RejectCoachRequest(ctx, coachshipID)
}

// CancelCoachRequest is the resolver for the cancelCoachRequest field.
func (r *mutationResolver) CancelCoachRequest(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.CancelCoachRequest(ctx, coachshipID)
}

// RemoveCoach is the resolver for the removeCoach field.
func (r *mutationResolver) RemoveCoach(ctx context.Context, coachshipID string) (*bool, error) {
	return r.RelationshipService.RemoveCoach(ctx, coachshipID)
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
