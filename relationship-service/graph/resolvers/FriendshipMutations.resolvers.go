package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
)

// SendFriendRequest is the resolver for the sendFriendRequest field.
func (r *mutationResolver) SendFriendRequest(ctx context.Context, receiverID string) (bool, error) {
	return r.RelationshipService.SendFriendRequest(ctx, receiverID)
}

// AcceptFriendRequest is the resolver for the acceptFriendRequest field.
func (r *mutationResolver) AcceptFriendRequest(ctx context.Context, friendshipID string) (bool, error) {
	return r.RelationshipService.AcceptFriendRequest(ctx, friendshipID)
}

// RejectFriendRequest is the resolver for the rejectFriendRequest field.
func (r *mutationResolver) RejectFriendRequest(ctx context.Context, friendshipID string) (bool, error) {
	return r.RelationshipService.RejectFriendRequest(ctx, friendshipID)
}

// CancelFriendRequest is the resolver for the cancelFriendRequest field.
func (r *mutationResolver) CancelFriendRequest(ctx context.Context, friendshipID string) (bool, error) {
	success, err := r.RelationshipService.CancelFriendRequest(ctx, friendshipID)
	if err != nil {
		return success, err
	}
	return success, nil
}

// EndFriendship is the resolver for the endFriendship field.
func (r *mutationResolver) EndFriendship(ctx context.Context, friendshipID string) (bool, error) {
	success, err := r.RelationshipService.EndFriendship(ctx, friendshipID)
	if err != nil {
		return success, err
	}
	return success, nil
}
