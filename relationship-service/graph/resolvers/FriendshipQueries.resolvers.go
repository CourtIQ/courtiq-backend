package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"

	"github.com/CourtIQ/courtiq-backend/relationship-service/graph/model"
)

// Friendship is the resolver for the friendship field.
func (r *queryResolver) Friendship(ctx context.Context, id string) (*model.Friendship, error) {
	return r.RelationshipService.GetFriendship(ctx, id)
}

// Friends is the resolver for the friends field.
func (r *queryResolver) Friends(ctx context.Context, limit *int, offset *int) ([]*model.Friendship, error) {
	return r.RelationshipService.ListFriends(ctx, *limit, *offset)
}

// PendingFriendRequests is the resolver for the pendingFriendRequests field.
func (r *queryResolver) PendingFriendRequests(ctx context.Context) ([]*model.Friendship, error) {
	return r.RelationshipService.ListPendingFriendRequests(ctx)
}

// SentFriendRequests is the resolver for the sentFriendRequests field.
func (r *queryResolver) SentFriendRequests(ctx context.Context) ([]*model.Friendship, error) {
	return r.RelationshipService.ListSentFriendRequests(ctx)
}

// FriendshipStatus is the resolver for the friendshipStatus field.
func (r *queryResolver) FriendshipStatus(ctx context.Context, otherUserID string) (*model.RelationshipStatus, error) {
	return r.RelationshipService.CheckFriendshipStatus(ctx, otherUserID)
}
