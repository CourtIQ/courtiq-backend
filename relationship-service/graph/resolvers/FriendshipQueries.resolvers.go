package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"

	"github.com/CourtIQ/courtiq-backend/relationship-service/graph/model"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

// CheckFriendshipStatus is the resolver for the checkFriendshipStatus field.
func (r *queryResolver) CheckFriendshipStatus(ctx context.Context, withUser primitive.ObjectID) (model.RelationshipStatus, error) {
	return r.RelationshipService.CheckFriendshipStatus(ctx, withUser)
}

// GetMyFriends is the resolver for the getMyFriends field.
func (r *queryResolver) GetMyFriends(ctx context.Context, limit *int, offset *int) ([]*model.Friendship, error) {
	return r.RelationshipService.GetMyFriends(ctx, limit, offset)
}

// GetSentFriendRequests is the resolver for the getSentFriendRequests field.
func (r *queryResolver) GetSentFriendRequests(ctx context.Context, limit *int, offset *int) ([]*model.Friendship, error) {
	return r.RelationshipService.GetSentFriendRequests(ctx, limit, offset)
}

// GetReceivedFriendRequests is the resolver for the getReceivedFriendRequests field.
func (r *queryResolver) GetReceivedFriendRequests(ctx context.Context, limit *int, offset *int) ([]*model.Friendship, error) {
	return r.RelationshipService.GetReceivedFriendRequests(ctx, limit, offset)
}
