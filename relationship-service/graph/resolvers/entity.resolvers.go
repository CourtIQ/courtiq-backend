package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"

	"github.com/CourtIQ/courtiq-backend/relationship-service/graph"
	"github.com/CourtIQ/courtiq-backend/relationship-service/graph/model"
)

// FindCoachshipByID is the resolver for the findCoachshipByID field.
func (r *entityResolver) FindCoachshipByID(ctx context.Context, id string) (*model.Coachship, error) {
	panic(fmt.Errorf("not implemented: FindCoachshipByID - findCoachshipByID"))
}

// FindFriendshipByID is the resolver for the findFriendshipByID field.
func (r *entityResolver) FindFriendshipByID(ctx context.Context, id string) (*model.Friendship, error) {
	panic(fmt.Errorf("not implemented: FindFriendshipByID - findFriendshipByID"))
}

// FindRelationshipByID is the resolver for the findRelationshipByID field.
func (r *entityResolver) FindRelationshipByID(ctx context.Context, id string) (model.Relationship, error) {
	panic(fmt.Errorf("not implemented: FindRelationshipByID - findRelationshipByID"))
}

// Entity returns graph.EntityResolver implementation.
func (r *Resolver) Entity() graph.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
