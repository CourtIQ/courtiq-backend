extend type Mutation {
  # Mutation to request to be a student (i.e., to have someone as your coach)
  # Only runs if current user is not already a student of the target user or has a pending request.
  requestToBeStudent(ofUserId: ID!): Boolean
    @satisfies(conditions: {
      nonExistence: { notExistingStudent: true }
    })

  # Mutation to accept a request from someone to be your student
  acceptStudentRequest(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireCoach: true }
    })

  # Mutation to reject a request from someone to be your student
  rejectStudentRequest(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireCoach: true }
    })

  # Mutation to cancel a request to be someone's student
  cancelRequestToBeStudent(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireStudent: true }
    })

  # Mutation to remove a student from an active coachship
  removeStudent(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: ACTIVE, relationshipType: COACHSHIP },
      roles: { requireCoach: true }
    })

  # Mutation to request to be a coach (i.e., to have someone as your student)
  requestToBeCoach(ofUserId: ID!): Boolean
    @satisfies(conditions: {
      nonExistence: { notExistingCoach: true }
    })

  # Mutation to accept a request from someone to be your coach
  acceptCoachRequest(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireStudent: true }
    })
    
  # Mutation to reject a coach request
  rejectCoachRequest(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireStudent: true }
    })
    
  # Mutation to cancel a coach request
  cancelCoachRequest(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: PENDING, relationshipType: COACHSHIP },
      roles: { requireCoach: true }
    })
    
  # Mutation to remove a coach from an active coachship
  removeCoach(coachshipId: ID!): Boolean
    @satisfies(conditions: {
      existence: { relationshipStatus: ACTIVE, relationshipType: COACHSHIP },
      roles: { requireStudent: true }
    })
}