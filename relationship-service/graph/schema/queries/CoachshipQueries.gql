extend type Query {  
  """Check the coaching status where the current user is the coach and the specified user is the student."""
  isCoachOf(userId: ObjectID!): RelationshipStatus!
  
  """Check the coaching status where the current user is the student and the specified user is the coach."""
  isStudentOf(userId: ObjectID!): RelationshipStatus!
  
  """Get all *accepted* coaching relationships for the current user (where they are either coach or student), with pagination."""
  getCoachships(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get all accepted coachships where the current user is the student (i.e., their coaches), with pagination."""
  getMyCoaches(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get all accepted coachships where the current user is the coach (i.e., their students), with pagination."""
  getMyStudents(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get pending requests sent *by* the current user asking to be someone's coach, with pagination."""
  getSentCoachRequests(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get pending requests received *by* the current user from someone asking the current user to be their student, with pagination."""
  getReceivedCoachRequests(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get pending requests sent *by* the current user asking someone to be their coach, with pagination."""
  getSentStudentRequests(limit: Int = 10, offset: Int = 0): [Coachship!]!
  
  """Get pending requests received *by* the current user from someone asking to be the current user's coach, with pagination."""
  getReceivedStudentRequests(limit: Int = 10, offset: Int = 0): [Coachship!]!
}